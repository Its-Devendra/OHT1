import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import { Typography, Button, CircularProgress } from '@mui/material';

const VirtualCookingSession = () => {
  const [sessionStatus, setSessionStatus] = useState('pending');
  const { sessionId } = useParams();

  useEffect(() => {
    // Simulate fetching session details from backend using sessionId
    const fetchSessionData = async () => {
      try {
        // Simulating API call to fetch session details
        // Assuming session details include status
        const sessionData = await getSessionData(sessionId);
        setSessionStatus(sessionData.status);
      } catch (error) {
        console.error('Error fetching session data:', error);
      }
    };

    fetchSessionData();
  }, [sessionId]);

  const getSessionData = async (sessionId) => {
    // Simulating API call to fetch session details
    // Replace this with actual API call
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve({
          status: 'active', // Example session status
          // Other session details...
        });
      }, 1000); // Simulating delay
    });
  };

  const joinSession = async () => {
    // Simulate joining the session
    // Replace this with actual join session logic
    setSessionStatus('active');
  };

  const leaveSession = async () => {
    // Simulate leaving the session
    // Replace this with actual leave session logic
    setSessionStatus('completed');
  };

  return (
    <div>
      {sessionStatus === 'pending' && (
        <div style={{ textAlign: 'center', paddingTop: '20px' }}>
          <CircularProgress />
          <Typography variant="h5">Loading session details...</Typography>
        </div>
      )}
      {sessionStatus === 'active' && (
        <div style={{ textAlign: 'center', paddingTop: '20px' }}>
          <Typography variant="h5">Virtual Cooking Session</Typography>
          <Button variant="contained" color="secondary" onClick={leaveSession}>
            Leave Session
          </Button>
        </div>
      )}
      {sessionStatus === 'completed' && (
        <Typography variant="h5">Session has ended.</Typography>
      )}
      {/* Button to join the session */}
      {sessionStatus !== 'active' && sessionStatus !== 'pending' && (
        <div style={{ textAlign: 'center', paddingTop: '20px' }}>
          <Button variant="contained" color="primary" onClick={joinSession}>
            Join Session
          </Button>
        </div>
      )}
    </div>
  );
};

export default VirtualCookingSession;
